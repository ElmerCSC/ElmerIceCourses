!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!                                                  !!
!! Elmer/Ice Beginner course 2023                   !!
!!                                                  !!
!! Move to transient                                !!
!!                                                  !!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

check keywords warn
echo on

!---LUA BEGIN 
! function IfThenElse(condition,t,f) 
!   if condition then return t else return f end 
! end 
!---LUA END 

Header
  Mesh DB "." "ARG_mesh"
End

include "../Parameters/Physical_Parameters.IN"

#Startyear = 2014.0
#duration = 50             !Duration in number of years
#steps_per_year = 2        !Number of step per year 
#dt = 1.0/steps_per_year   !Timestep size (in year)

$name_simu = "ARG_Transient_1C"

Constants
  yearstartdata = real 1975.0! Year at which the data starts in the files (Transient MB only) 
  
  MoyAirTemperatureFile = File "../Data/safran_daily_temp_1975-2014.dat"
  PrecipFile = File "../Data/safran_daily_precip_1975-2014.dat"
   
  MaskAccuFile = File "../Data/MaskAccu.dat"
  MaskReliefFile = File "../Data/MaskRelief.dat" 
  
!!!!!!!   The two following parameters can be used to change the climate  !!!!!!!!!!!
  PrecipCorrec = real 1.0         ! Multiplicative factor on precip - Initial value 1.0 
  TempCorrec= real 1.0            ! Shift on temperature - Initial value = 0.0 

  GradTemp = real 0.0058          ! Air temperature Lapse Rate
  GradPrecip= real 0.001          ! Precipitation Lapse Rate (multiplicative factor)
  MinAltFact = real 0.5           ! Minimum multiplicative factor for altitude
  MaxAltFact = real 5.0           ! Maximum multiplicative factor for altitude
  
  z_temp = real 2400.0	          ! Altitude of temperature measurement in file
  z_precip = real 2400.0          ! Altitude of precip measurement in file
  
! Melt model Oerlemans 2001 : Energy for melt (W/m2) = (k0 + k1*T (1-albedo)*SW*RadFact)
  RadFact = real 0.7              ! Ice Radiation factor correction
  Albedo_snow = real 0.6          ! Snow albedo
  Albedo_ice = real 0.3           ! Ice Albedo
  ksnow = real 7.0     	          ! Energy input for snow per degree (W/m2 K-1)
  kice = real 10.0     	          ! Energy input for ice per degree (W/m2 K-1)
  k0 = real -64.0                 ! Energy balance at 0Â°C (W/m2) 
  
  seuil_precip = real 1.0         ! Threshold temperature for snow/rain transition
  firn_param = real 10.0          ! Densification parameter to compute firn thickness
  Latitude = real 46.0            ! Latitude for potential radiation computation
  
  Water Density = Real #rhowkg    ! Water density in kg/m3 
  Ice Density = Real #rhoikg      ! Ice density in kg/m3
  L_heat = Real #LHeat
End

Simulation
  Coordinate System  =  Cartesian 3D 
  Simulation Type = Transient

  Extruded Mesh Levels = Integer #Nz

  Timestepping Method = "bdf"
  BDF Order = 2

  Timestep Intervals(1) = #duration * steps_per_year
  Output Intervals(1) = #steps_per_year
  Timestep Sizes(1) = #dt 

  Steady State Max Iterations = 1
  Steady State Min Iterations = 1

  Output File = "$name_simu$.result"
  Post File = "$name_simu$.vtu"
  vtu:VTU Time Collection = Logical True

  Restart File = "../../1_IMPORT_DEM/ARG_mesh/ARG_DEM.result"
  Restart Position = 0
  ! Restart Time = Real #Startyear
  Restart Before Initial Conditions = Logical true

  max output level = 3
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! The ice
Body 1
  Name = "glacier"
  Equation = 1
  Body Force = 1
  Material = 1
  Initial Condition = 1
End

! The upper free surface
Body 2
  Name = "surface"
  Equation = 2
  Material = 1
  Body Force = 2
  Initial Condition = 2
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Time = Real #Startyear
End

Initial Condition 2
  Zs = Equals SurfDEM     
  Ref Zs = Equals SurfDEM       
  IcyMask = Real 1.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1 = Real 0.0    
  Flow BodyForce 2 = Real 0.0            
  Flow BodyForce 3 = Real #gravity 
End

Body Force 2
  Zs Accumulation Flux 1 = real 0.0
  Zs Accumulation Flux 2 = real 0.0
  Zs Accumulation Flux 3 = Equals "Mass Balance" 

! surface slope norm
  slope = Variable "SurfGrad 1", "SurfGrad 2"
    Real LUA "(math.sqrt(tx[0]*tx[0]+tx[1]*tx[1]))*180.0/3.14"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
! For the ice flow  
  Density = Real #rhoi 
  Viscosity Model = String "Glen"
  Viscosity = Real 1.0 ! Dummy but avoid warning output 
  Glen Exponent = Real 3.0
  Critical Shear Rate = Real 1.0e-10
  
! properties with T
  Rate Factor 1 = Real #A1  
  Rate Factor 2 = Real #A2
  Activation Energy 1 = Real #Q1
  Activation Energy 2 = Real #Q2  
  Glen Enhancement Factor = Real 1.0
  Limit Temperature = Real -10.0
  Relative Temperature = Real 0.0

  Min Zs = Variable BedDEM
    Real LUA "tx[0]+ MinH"
  Max Zs =  Variable Coordinate 3
    Real LUA "tx[0]+ 18.0"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Map mesh to bottom and top surfaces
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1  
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"

  Active Coordinate = Integer 3
  Mesh Velocity Variable = String "dSdt"
  Mesh Update Variable = String "dS"
  Mesh Velocity First Zero = Logical True

  Top Surface Variable Name = String "Zs"

  Displacement Mode = Logical False
  Correct Surface = Logical True
  Minimum Height = Real #MinH
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Compute Thickness and Depth
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 2
  Equation = "HeightDepth 1"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Project to everywhere = Logical True
  Operator 1 = Thickness
  Operator 2 = Depth
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Icy Mask
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 3
  ! to be executed on top surface (need Thickness)
  Equation = "IcyMask"
  Procedure = "ElmerIceSolvers" "IcyMaskSolver"
  Variable = -dofs 1 "IcyMask"
 ! no matrix resolution
  Optimize Bandwidth = Logical False
  Toler = Real 1.0e-1
  Ice Free Thickness = Real 20.0
  Remove Isolated Points = Logical True
  Remove Isolated Edges = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Stokes 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 4
  Equation = "Stokes-Vec"
  Procedure = "IncompressibleNSVec" "IncompressibleNSSolver"
  Div-Curl Discretization = Logical False

  Exported Variable 1 = -dofs 1 "dSdt"
  Exported Variable 2 = -dofs 1 "dS"
  Exported Variable 3 = -dofs 1 "BedDEM"
  Exported Variable 4 = -dofs 1 "SurfDEM"
  Exported Variable 5 = -dofs 1 "Thickness"
  Exported Variable 6 = Flow Solution Loads[Fx:1 Fy:1 Fz:1 CEQ Residual:1 ]
  Calculate Loads = Logical True

  Optimize Bandwidth = Logical True
  Flow Model = Stokes
  Stabilization Method = String Stabilized

  Linear System Abort Not Converged = Logical False
  ! Iterative approach:
  !---------------------
  Linear System Solver = Iterative

  Linear System Iterative Method = "GCR"
  Linear System Convergence Tolerance = 1.0E-08
! Solving for residual allows us to use sloppier tolerances
! This seems to faster strategy.
!  Linear System Residual Mode = True
!  Linear System Convergence Tolerance = 1.0E-04
  Linear System Max Iterations = 500
  Linear System Abort Not Converged = False
  Linear System Preconditioning = "ILU1"
  Linear System Residual Output = 10

  !-------------------------------------------
  !Linear System Solver = Direct
  !Linear System Direct Method = $directmethod ! Parallel: MUMPS, Serial: UMFPACK

  !Non-linear iteration settings:
  !------------------------------
  Nonlinear System Max Iterations = 50
  Nonlinear System Convergence Tolerance  = 1.0e-5
  Nonlinear System Newton After Iterations = 51
  Nonlinear System Newton After Tolerance = 1.0e-6
  !Nonlinear System Consistent Norm = True
  ! Nonlinear System Relaxation Factor = 1.00
  ! Nonlinear System Reset Newton = Logical True

  ! Convergence on timelevel (not required here)
  !---------------------------------------------
  Steady State Convergence Tolerance = Real 1.0e-3

  !Relative Integration Order = -1
  Number of Integration Points = Integer 44 ! 21, 28, 44, 64, ...

  ! 1st iteration viscosity is constant
  Constant-Viscosity Start = Logical False

! Some timing info
  Boundary Assembly Timing = Logical True
  Bulk Assembly Timing = Logical True
  Solver Timing = Logical True
  Linear System Timing = Logical True
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Surface slope
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 5
  Equation = "Surface Slope"
  Procedure = File "../bin/Compute2DNodalGradient" "Compute2DNodalGradient"
  Variable = -dofs 2 "SurfGrad"
  Variable Name = String "Zs"
  Update Exported Variables = Logical True
  Exported Variable 1 = "slope"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Mass balance forcing
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 6
  Exec Interval = 1   ! Need to be set if transient MB
  Timestep Scale = Real 1.0 ! Need to be set if transient MB
  
  Transient MB = Logical False ! If False, this will compute the mean mass balance associated to the provided daily temperature file and precip file
  
  Equation = SurfBoundary
  Variable = -dofs 1 "Mass Balance"
  Procedure = File "../bin/MassBalance" "TransientMassBalance"
  
  Exported Variable 1 = -dofs 1 "melting" 
  Exported Variable 2 = -dofs 1 "Firn" 
  Exported Variable 3 = -dofs 1 "accu" 
  Exported Variable 4 = -dofs 1 "PotRad" 
  
!  Possibility to export more variable : Firn, accu, rain, melting ... see in the code
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Free surface evolution
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 7
  !Exec Solver = "Never" 
  Equation =  String "Free Surface Evolution"
  Variable = -dofs 1 "Zs"
  Procedure = "FreeSurfaceSolver" "FreeSurfaceSolver"
  
  Stabilization Method = Stabilized
  
  ! calculate dz/dt 
  Calculate Velocity = Logical True

  ! apply internal limiters
  Apply Dirichlet = Logical true
  
  ! linear systeme settings
  !Linear System Solver = Iterative
  !Linear System Iterative Method = BiCGStab
  !Linear System Max Iterations  = 10000
  !Linear System Preconditioning = ILU1
  Linear System Convergence Tolerance = 1.0e-06
  
  Linear System Solver = Direct         
  Linear System Direct Method = "MUMPS"
  Mumps percentage increase working space = Integer 400

  ! non-linear system settings
  Nonlinear System Max Iterations = 100 ! variational inequality needs more than one round
  Nonlinear System Min Iterations = 2
  Nonlinear System Convergence Tolerance = 1.0e-8

  ! convergence on timelevel
  Steady State Convergence Tolerance = 1.0e-6
    
  ! loads also takes into account dirichlet conditions to compute residual flux
  calculate loads = Logical True

  Exported Variable 1 = -nooutput "Zs Residual"
  Exported Variable 2 = "Ref Zs"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  Scalar Output
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 8
  ! to be executed on top surface (need Thickness)
  Exec Solver = After Timestep
  Equation = "Save 1D Vars"
  Procedure = File "../bin/Scalar_OUTPUT" "Scalar_OUTPUT"
  Variable = -nooutput "savescal"

  File Name = File "GlacierOut/$name_simu$.dat"
  
  !Coordinate of the reference point for front distance variable
  XRefFrontPosition = real 9.552320e+05
  YRefFrontPosition = real 1.196998e+05

  SMB altitude Range (2) = real 1600.0 3600.0  ! Return SMB and area per elevation band every 200m within the given range
End

Solver 9
  Equation = String "Borehole"
  Exec solver = After timestep

  Procedure = "SaveData" "SaveLine"
  Filename = "GlacierOut/Profil_$name_simu$.dat"
  File append = false

  Variable 1 = Velocity 1
  Variable 2 = Velocity 2
  Variable 3 = Velocity 3
  Variable 4 = melting

  Polyline Coordinates(2,3) = Real  959323.0 117572.5 2000.0 959323.0 117572.5 2500.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Equation 1
  Active Solvers(4) = 1 2 4 9
End

Equation 2
  Active Solvers(5) = 3 5 6 7 8
  Flow Solution Name = String "Flow Solution"
  Convection = Computed
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! lateral side of the glacier
Boundary Condition 1
  Target Boundaries = 1
  Name = "side"
  Mass Consistent Normals = Logical True
  Normal-Tangential Velocity = Logical True  
  Velocity 1 = Real 0.0
  
! Apply a Dirichlet BC on Zs for ice free area to avoid peak formation
  Zs = Variable BedDEM
    Real LUA "tx[0]+ MinH"
  Zs Condition = Variable "IcyMask","Mass Balance" 
    Real LUA "IfThenElse((tx[0]< -0.5) and (tx[1]<=0.0), 1.0, -1.0)" 
End

! Bedrock 
Boundary Condition 2
  Name = "bed"
  Bottom Surface = Equals BedDEM
  Mass Consistent Normals = Logical True
  Normal-Tangential Velocity = Logical True  
  Velocity 1 = Real 0.0  
  Weertman Friction Coefficient = Real #Cw
  Weertman Exponent = Real #mw
  Weertman Linear Velocity = Real 0.00001
End

! Upper Surface
Boundary Condition 3
  Name = "upper surface"
  Body Id = 2
End
